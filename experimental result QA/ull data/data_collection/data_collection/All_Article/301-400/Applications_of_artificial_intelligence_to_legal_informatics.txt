Artificial intelligence and law (AI and law) is a subfield of artificial intelligence (AI) mainly concerned with applications of AI to legal informatics problems and original research on those problems. It is also concerned to contribute in the other direction: to export tools and techniques developed in the context of legal problems to AI in general. For example, theories of legal decision making, especially models of argumentation, have contributed to knowledge representation and reasoning; models of social organization based on norms have contributed to multi-agent systems; reasoning with legal cases has contributed to case-based reasoning; and the need to store and retrieve large amounts of textual data has resulted in contributions to conceptual information retrieval and intelligent databases.

Although Loevinger, Allen and Mehl anticipated several of the ideas that would become important in AI and Law, the first serious proposal for applying AI techniques to law is usually taken to be Buchanan and Headrick. Early work from this period includes Thorne McCarty's influential TAXMAN project in the USA and Ronald Stamper's LEGOL project in the UK. The former concerned the modeling of the majority and minority arguments in a US Tax law case (Eisner v Macomber), while the latter attempted to provide a formal model of the rules and regulations that govern an organization. Landmarks in the early 1980s include Carole Hafner's work on conceptual retrieval, Anne Gardner's work on contract law, Rissland's work on legal hypotheticals and the work at Imperial College, London on executable formalisations of legislation.

Early meetings of scholars included a one-off meeting at Swansea, the series of conferences organized by IDG in Florence and the workshops organised by Charles Walter at the University of Houston in 1984 and 1985. In 1987 a biennial conference, the International Conference on AI and Law (ICAIL), was instituted. This conference began to be seen as the main venue for publishing and the developing ideas within AI and Law, and it led to the foundation of the International Association for Artificial Intelligence and Law (IAAIL), to organize and convene subsequent ICAILs. This, in turn, led to the foundation of the Artificial Intelligence and Law Journal, first published in 1992. In Europe, the annual JURIX conferences (organised by the Jurix Foundation for Legal Knowledge Based Systems), began in 1988. Initially intended to bring together the Dutch-speaking (i.e. Dutch and Flemish) researchers, JURIX quickly developed into an international, primarily European, conference and since 2002 has regularly been held outside the Dutch speaking countries. Since 2007 the JURISIN workshops have been held in Japan under the auspices of the Japanese Society for Artificial Intelligence.

Formal models of legal texts and legal reasoning have been used in AI and Law to clarify issues, to give a more precise understanding and to provide a basis for implementations. A variety of formalisms have been used, including propositional and predicate calculi; deontic, temporal and non-monotonic logics; and state transition diagrams. Prakken and Sartor give a detailed and authoritative review of the use of logic and argumentation in AI and Law, and has an excellent set of references.

An important role of formal models is to remove ambiguity. In fact, legislation abounds with ambiguity: because it is written in natural language there are no brackets and so the scope of connectives such as "and" and "or" can be unclear (legal drafters do not observe the mathematical conventions in this respect). "Unless" is also capable of several interpretations, and legal draftsman never write "if and only if", although this is often what they intend by "if". In perhaps the earliest use of logic to model law in AI and Law, Layman Allen advocated the use of propositional logic to resolve such syntactic ambiguities in a series of papers.

In the late 1970s and throughout the 1980s a significant strand on AI and Law work involved the production of executable models of legislation. Originating in the LEGOL work of Ronald Stamper the idea was to represent legislation using a formal language and to use this formalisation (typically with some sort of user interface to gather the facts of a particular case) as the basis for an expert system. This became popular, mainly using the Horn Clause subset of first order predicate calculus. In particular Sergot et al.'s representation of the British Nationality Act did much to popularise the approach. In fact, as later work showed, this was an untypically suitable piece of legislation on which to employ the approach: it was new, and so had not been amended, relatively simple and almost all of the concepts were non-technical. Later work, such as that on Supplementary Benefits, showed that larger, more complicated (containing many cross references, exceptions, counterfactuals, and deeming provisions), legislation which used many highly technical concepts (such as contribution conditions) and which had been the subject of many amendments produced a far less satisfactory final system. Some efforts were made to improve matters from a software engineering perspective, especially to handle problems such as cross reference, verification and frequent amendment. The use of hierarchical representations was suggested to address the first problem, and so-called isomorphic representation was intended to address the other two. As the 1990s developed this strand of work became largely absorbed in the development of formalisations of domain conceptualisations, (so-called ontologies), which became popular in AI following the work of Gruber. Early examples in AI and Law include Valente's functional ontology and the frame based ontologies of Visser and van Kralingen. Legal ontologies have since become the subject of regular workshops at AI and Law conferences and there are many examples ranging from generic top-level and core ontologies to very specific models of particular pieces of legislation.

Since law comprises sets of norms, it is unsurprising that deontic logics have been tried as the formal basis for models of legislation. These, however, have not been widely adopted as the basis for expert systems, perhaps because expert systems are supposed to enforce the norms, whereas deontic logic becomes of real interest only when we need to consider violations of the norms. In law directed obligations, whereby an obligation is owed to another named individual are of particular interest, since violations of such obligations are often the basis of legal proceedings. There is also some interesting work combining deontic and action logics to explore normative positions.

In the context of multi-agent systems, norms have been modelled using state transition diagrams. Often, especially in the context of electronic institutions, the norms so described are regimented (i.e., cannot be violated), but in other systems violations are also handled, giving a more faithful reflection of real norms. For a good example of this approach see Modgil et al. 

Law often concerns issues about time, both relating to the content, such as time periods and deadlines, and those relating to the law itself, such as commencement. Some attempts have been made to model these temporal logics using both computational formalisms such as the Event Calculus and temporal logics such as defeasible temporal logic. 

In any consideration of the use of logic to model law it needs to be borne in mind that law is inherently non-monotonic, as is shown by the rights of appeal enshrined in all legal systems, and the way in which interpretations of the law change over time. Moreover, in the drafting of law exceptions abound, and, in the application of law, precedents are overturned as well as followed. In logic programming approaches, negation of failure is often used to handle non-monotonicity, but specific non-monotonic logics such as defeasible logic have also been used. Following the development of abstract argumentation, however, these concerns have been addressed through argumentation rather than through the use of non-monotonic logics.