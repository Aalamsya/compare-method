Knowledge-based recommender systems (knowledge based recommenders) [1][2] are a specific type of recommender system that are based on explicit knowledge about the item assortment, user preferences, and recommendation criteria (i.e., which item should be recommended in which context). These systems are applied in scenarios where alternative approaches such as collaborative filtering and content-based filtering cannot be applied.

A major strength of knowledge-based recommender systems is the non-existence of cold-start (ramp-up) problems. A corresponding drawback is a potential knowledge acquisition bottleneck triggered by the need to define recommendation knowledge in an explicit fashion. 

Knowledge-based recommender systems are well suited to complex domains where items are not purchased very often, such as apartments and cars. Further examples of item domains relevant for knowledge-based recommender systems are financial services,[3] digital cameras,[4] and tourist destinations.[5] Rating-based systems often do not perform well in these domains due to the low number of available ratings.[1]

Additionally, in complex item domains, customers want to specify their preferences explicitly (e.g., "the maximum price of the car is X") . In this context, the recommender system must take into account constraints: for instance, only those financial services that support the investment period specified by the customer should be recommended. Neither of these aspects are supported by approaches such as collaborative filtering and content-based filtering. 

Knowledge-based recommender systems are often conversational, i.e., user requirements and preferences are elicited within the scope of a feedback loop. A major reason for the conversational nature of knowledge-based recommender systems is the complexity of the item domain where it is often impossible to articulate all user preferences at once. Furthermore, user preferences are typically not known exactly at the beginning but are constructed within the scope of a recommendation session.[6]

In a search-based recommender, user feedback is given in terms of answers to questions which restrict the set of relevant items.[7] An example of such a question is "Which type of lens system do you prefer: fixed or exchangeable lenses?". On the technical level, search-based recommendation scenarios can be implemented on the basis of constraint-based recommender systems.[7] Constraint-based recommender systems are implemented on the basis of constraint search [7][8] or different types of conjunctive query-based approaches.[9]

In a navigation-based recommender, user feedback is typically provided in terms of "critiques" [10] which specify change requests regarding the item currently recommended to the user.[2] Critiques are then used for the recommendation of the next "candidate" item. An example of a critique in the context of a digital camera recommendation scenario is "I would like to have a camera like this but with a lower price". This is an example of a "unit critique" [1] which represents a change request on a single item attribute. "Compound critiques" [4] allow the specification of more than one change request at a time. "Dynamic critiquing" [11] also takes into account preceding user critiques (the critiquing history). More recent approaches additionally exploit information stored in user interaction logs to further reduce the interaction effort in terms of the number of needed critiquing cycles.
